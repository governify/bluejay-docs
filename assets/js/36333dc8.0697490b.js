"use strict";(self.webpackChunkbluejay_docs=self.webpackChunkbluejay_docs||[]).push([[6962],{1400:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"deployment/kubernetes","title":"Kubernetes","description":"Kubernetes","source":"@site/versioned_docs/version-1.0/deployment/kubernetes.md","sourceDirName":"deployment","slug":"/deployment/kubernetes","permalink":"/1.0/deployment/kubernetes","draft":false,"unlisted":false,"editUrl":"https://github.com/governify/bluejay-docs/edit/main/versioned_docs/version-1.0/deployment/kubernetes.md","tags":[],"version":"1.0","lastUpdatedBy":"Pablo Fernandez","lastUpdatedAt":1751790370000,"sidebarPosition":3,"frontMatter":{"title":"Kubernetes","description":"Kubernetes","sidebar_position":3,"hide_table_of_contents":false},"sidebar":"defaultSidebar","previous":{"title":"Docker Compose","permalink":"/1.0/deployment/docker-compose"},"next":{"title":"Architecture","permalink":"/1.0/development/architecture/intro"}}');var t=r(4848),i=r(8453);const o={title:"Kubernetes",description:"Kubernetes",sidebar_position:3,hide_table_of_contents:!1},a="Kubernetes Deployment Governify-Falcon",l={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Infrastructure setup",id:"infrastructure-setup",level:2},{value:"Deploying the system in a Kubernetes cluster Governify-Bluejay",id:"deploying-the-system-in-a-kubernetes-cluster-governify-bluejay",level:2},{value:"Steps",id:"steps",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"kubernetes-deployment-governify-falcon",children:"Kubernetes Deployment Governify-Falcon"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.p,{children:"This guide will help you deploy Governify-Falcon in a Kubernetes cluster."}),"\n",(0,t.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Kubernetes cluster with HELM installed"}),"\n",(0,t.jsx)(n.li,{children:"A domain with the ability to modify DNS records."}),"\n",(0,t.jsx)(n.li,{children:"Ports 80, 443 open for the cluster."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"infrastructure-setup",children:"Infrastructure setup"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Create Namespace"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bin/bash",children:"kubectl create namespace governify-falcon\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Install Contour"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bin/bash",children:"kubectl apply -f https://projectcontour.io/quickstart/contour.yaml\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Wait a few minutes and get the Load Balancer IP Address"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bin/bash",children:"(kubectl get -n projectcontour service envoy -o json) | jq -r '.status.loadBalancer.ingress[0].ip'\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Install CertManager"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bin/bash",children:"kubectl apply -f https://github.com/jetstack/cert-manager/releases/download/v1.1.0/cert-manager.yaml\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Create a values.yaml file with the following content"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bin/bash",children:"    global:\n        node_env: production\n        gov_infrastructure: http://falcon-assets-manager/api/v1/public/infrastructure.yaml\n        services_prefix: .<infrastructure-prefix>\n        dns_suffix: .<your-DNS-zone>\n        login_user: governify-admin\n        login_password: governify-project\n    \n    assets_manager:\n        private_key: somerandomkey\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Install charts"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bin/bash",children:"helm repo add governify https://governify.github.io/helm-charts\nhelm repo update\nhelm install -f values.yaml falcon governify/Governify-Falcon\n"})}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["More information about the configuration options available for Governify-Falcon HELM chart can be found at our ",(0,t.jsx)(n.a,{href:"https://github.com/governify/helm-charts/tree/main/infrastructure/Governify-Falcon",children:"HELM Charts repository"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"deploying-the-system-in-a-kubernetes-cluster-governify-bluejay",children:"Deploying the system in a Kubernetes cluster Governify-Bluejay"}),"\n",(0,t.jsx)(n.admonition,{type:"caution",children:(0,t.jsx)(n.p,{children:"For development purposes it is more appropiate to use docker-compose due to its simplicity. Nevertheless, if the production environment is a Kubernetes cluster, it is recommended to test the system on this locally deployed cluster first."})}),"\n",(0,t.jsx)(n.p,{children:"Governify provides Helm charts for deploying Bluejay services inside a Kubernetes cluster. The following steps describe how to locally deploy the infrastructure inside a development cluster (or a single-node cluster like minikube):"}),"\n",(0,t.jsx)(n.h3,{id:"steps",children:"Steps"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"1."})," Create Namespace"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bin/bash",children:"kubectl create namespace governify-bluejay\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"2."})," Configure kubernetes for assigning NodePorts in range (3000-9000) by adding ",(0,t.jsx)(n.code,{children:"--service-node-port-range=3000-6000"})," to the kubernetes kube-apiserver config file. If using docker-desktop ",(0,t.jsx)(n.a,{href:"https://stackoverflow.com/questions/64758012/location-of-kubernetes-config-directory-with-docker-desktop-on-windows",children:"check this page"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"3."})," Create a values.yaml file with the following content"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"    global:\n        node_env: development\n        gov_infrastructure: <assets_call_to_infrastructure-local.yaml>\n        login_user: <username>\n        login_password: <password>\n\n    assets-manager:\n        gov_infrastructure: <local_path_to_infrastructure-local.yaml>\n        assets_repository: <repository_url> (defaults to current assets repository inside github governify organization)\n        assets_repository_branch: <branch> (default: main)\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"4."})," Install charts"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bin/bash",children:"helm repo add governify https://governify.github.io/helm-charts\nhelm repo update\nhelm install -f values.yaml <release_name> governify/<chart_name>\n"})}),"\n",(0,t.jsxs)(n.p,{children:["More information about the configuration options available for Governify-Bluejay HELM chart can be found at our ",(0,t.jsx)(n.a,{href:"https://github.com/governify/helm-charts/tree/main/infrastructure/Governify-Bluejay",children:"HELM Charts repository"}),"."]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>a});var s=r(6540);const t={},i=s.createContext(t);function o(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);